#!/usr/bin/env bash
#
# Run a new container by selecting the docker image from a interactive menu
#
# https://medium.com/@calbertts/docker-and-fuzzy-finder-fzf-4c6416f5e0b5

set -o pipefail

function fail() {
  printf '%s\n' "$1" >&2  ## Send message to stderr. Exclude >&2 if you don't want it that way.
  exit "${2-1}"  ## Return a code specified by $2 or 1 by default.
}

function has() {
  # Check if a command is in $PATH
  which "$@" > /dev/null 2>&1
}

# shellcheck disable=SC2086,SC2162
function runc() {
  export FZF_DEFAULT_OPTS='--height 90% --reverse --border'
  local image
  local cmd
  local volume
  local curDir
  image=$(docker images --format '{{.Repository}}:{{.Tag}}' | fzf-tmux --reverse --multi)
  if [[ $image != '' ]]; then
    echo -e "\n  \033[1mDocker image:\033[0m" "$image"
    read -e -p $'  \e[1mOptions: \e[0m' -i "-it --rm" options

    printf "  \033[1mChoose the command: \033[0m"
    cmd=$(echo -e "/bin/bash\nsh" | fzf-tmux --reverse --multi)
    if [[ $cmd == '' ]]; then
        read -e -p $'  \e[1mCustom command: \e[0m' cmd
    fi
    echo -e "  \033[1mCommand: \033[0m" "$cmd"

    export FZF_DEFAULT_COMMAND='find ./ -type d -maxdepth 1 -exec basename {} \;'
    printf "  \033[1mChoose the volume: \033[0m"
    volume=$(fzf-tmux --reverse --multi)
    curDir=${PWD##*/}
    if [[ $volume == '.' ]]; then
        echo -e "  \033[1mVolume: \033[0m" "$volume"
        volume="$(pwd):/$curDir -w /$curDir"
    else
        echo -e "  \033[1mVolume: \033[0m" "$volume"
        volume="$(pwd)/$volume:/$volume -w /$volume"
    fi

    export FZF_DEFAULT_COMMAND=""
    export FZF_DEFAULT_OPTS=""

    history -s runc
    history -s docker run $options -v $volume $image $cmd
    echo ''
    docker run $options -v $volume $image $cmd
  fi
}

if has fzf; then
# shellcheck disable=SC2068
  runc $@
else
  fail "Cannot find 'fzf' in your PATH."
fi
